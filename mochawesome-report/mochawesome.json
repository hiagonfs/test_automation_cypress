{
  "stats": {
    "suites": 1,
    "tests": 9,
    "passes": 9,
    "pending": 0,
    "failures": 0,
    "start": "2021-03-24T15:30:07.739Z",
    "end": "2021-03-24T15:30:37.008Z",
    "duration": 29269,
    "testsRegistered": 9,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "32dd8fa2-bb01-4bf3-b93c-2f90409dc9c6",
      "title": "",
      "fullFile": "cypress\\integration\\CadastroUsuario.feature",
      "file": "cypress\\integration\\CadastroUsuario.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8b10ce16-a17f-4e56-9e03-ef412092aa04",
          "title": "Cadastro de usuários",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Acessar a página inicial do sistema",
              "fullTitle": "Cadastro de usuários Acessar a página inicial do sistema",
              "timedOut": null,
              "duration": 4781,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "39664c61-5c44-4054-a77a-41be38ce1362",
              "parentUUID": "8b10ce16-a17f-4e56-9e03-ef412092aa04",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastrar usuario válido e com sucesso",
              "fullTitle": "Cadastro de usuários Cadastrar usuario válido e com sucesso",
              "timedOut": null,
              "duration": 2570,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b29b0000-798a-443a-9b72-2b7eb5dd91be",
              "parentUUID": "8b10ce16-a17f-4e56-9e03-ef412092aa04",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Excluir usuario cadastrado no sistema",
              "fullTitle": "Cadastro de usuários Excluir usuario cadastrado no sistema",
              "timedOut": null,
              "duration": 3944,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5284a15d-611d-44fb-ab21-b5960e244946",
              "parentUUID": "8b10ce16-a17f-4e56-9e03-ef412092aa04",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastrar usuário com nome vazio",
              "fullTitle": "Cadastro de usuários Cadastrar usuário com nome vazio",
              "timedOut": null,
              "duration": 1621,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9ee376cf-9ff0-4272-a403-42c41199f4e6",
              "parentUUID": "8b10ce16-a17f-4e56-9e03-ef412092aa04",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastrar usuário com email vazio",
              "fullTitle": "Cadastro de usuários Cadastrar usuário com email vazio",
              "timedOut": null,
              "duration": 1328,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "36802a58-8c76-4277-b569-6860696011b8",
              "parentUUID": "8b10ce16-a17f-4e56-9e03-ef412092aa04",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastrar usuário com senha vazia",
              "fullTitle": "Cadastro de usuários Cadastrar usuário com senha vazia",
              "timedOut": null,
              "duration": 3784,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c802cd1d-6695-4340-a23d-b43c23185373",
              "parentUUID": "8b10ce16-a17f-4e56-9e03-ef412092aa04",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastrar usuário com nome incompleto",
              "fullTitle": "Cadastro de usuários Cadastrar usuário com nome incompleto",
              "timedOut": null,
              "duration": 2056,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6b32f5b3-3a5e-4340-a381-2c78cc7f84fc",
              "parentUUID": "8b10ce16-a17f-4e56-9e03-ef412092aa04",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastrar usuário com email invalido",
              "fullTitle": "Cadastro de usuários Cadastrar usuário com email invalido",
              "timedOut": null,
              "duration": 2861,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4867f88a-600d-4aae-a999-140cd4c4c34c",
              "parentUUID": "8b10ce16-a17f-4e56-9e03-ef412092aa04",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastrar usuário com senha incompleta",
              "fullTitle": "Cadastro de usuários Cadastrar usuário com senha incompleta",
              "timedOut": null,
              "duration": 1740,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "120e125e-602a-4042-b09a-64d8a5945a1c",
              "parentUUID": "8b10ce16-a17f-4e56-9e03-ef412092aa04",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "39664c61-5c44-4054-a77a-41be38ce1362",
            "b29b0000-798a-443a-9b72-2b7eb5dd91be",
            "5284a15d-611d-44fb-ab21-b5960e244946",
            "9ee376cf-9ff0-4272-a403-42c41199f4e6",
            "36802a58-8c76-4277-b569-6860696011b8",
            "c802cd1d-6695-4340-a23d-b43c23185373",
            "6b32f5b3-3a5e-4340-a381-2c78cc7f84fc",
            "4867f88a-600d-4aae-a999-140cd4c4c34c",
            "120e125e-602a-4042-b09a-64d8a5945a1c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 24685,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}